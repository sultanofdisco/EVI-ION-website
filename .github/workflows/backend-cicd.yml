name: Backend CICD
run-name: Running
on:
  push:
    branches:
      - sungmin
env:
  AWS_REGION: ap-northeast-2
  AWS_S3_BUCKET: moim-image
  AWS_CODE_DEPLOY_APPLICATION: mogether-cd
  AWS_CODE_DEPLOY_GROUP: mogether-cd-group

jobs:
  build-with-gradle:
    runs-on: ubuntu-latest
    
    steps:
    - name: sungmin branch로 이동
      uses: actions/checkout@v3
      with:
        ref: sungmin
        # submodules: true
        # token: ${{ secrets.BE_SECURITY }}

    - name: Checkout submodules
      uses: actions/checkout@v3
      with:
        submodules: recursive
        token: ${{ secrets.BE_SECURITY }}
        
    - name: Install JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'corretto'
        
    - name: gradlew에 실행 권한 부여
      run: cd backend/mogether && chmod +x ./gradlew
    - name: Build with Gradle
      run: cd backend/mogether && ./gradlew clean build
      
    # 디렉토리 생성
    - name: Make Directory
      run: mkdir -p deploy
        
    # Jar 파일 복사
    - name: Copy Jar
      # run: cd backend/mogether && cp ./build/libs/moim-0.0.1-SNAPSHOT.jar ./deploy
      run: cp backend/mogether/build/libs/moim-0.0.1-SNAPSHOT.jar ./deploy
      
    # appspec.yml 파일 복사
    - name: Copy appspec.yml
      # run: cd backend/mogether && cp appspec.yml ./deploy
      run: cp backend/mogether/appspec.yml ./deploy
      # run: cp appspec.yml ./deploy
      
    # script files 복사
    - name: Copy script
      # run: cd backend/mogether && cp ./scripts/start.sh /deploy
      run: cp backend/mogether/scripts/start.sh ./deploy
      # run: cp ./scripts/start.sh ./deploy
      
    - name: Make zip file
      run: zip -r ./mogether.zip ./deploy
      shell: bash

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ env.AWS_REGION }}
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}


    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./mogether.zip s3://$AWS_S3_BUCKET

      
    # CodeDeploy에게 배로 명령을 내립니다.
    - name: Code Deploy
      run: >
        aws deploy create-deployment --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }}
        --deployment-config-name CodeDeployDefault.AllAtOnce
        --deployment-group-name ${{ env.AWS_CODE_DEPLOY_GROUP }}
        --s3-location bucket=${{ env.AWS_S3_BUCKET }},bundleType=zip,key=mogether.zip
        
    # # Deploy
    # - name: Deploy
    #   env:
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
    #   run: aws deploy create-deployment --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${{ env.AWS_CODE_DEPLOY_GROUP }} --file-exists-behavior OVERWRITE --s3-location bucket=${{ env.AWS_S3_BUCKET }},bundleType=zip,key=mogether.zip --region ap-northeast-2
        
    #- name: S3에 업로드
      #run: aws deploy push --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --ignore-hidden-files --s3-location s3://${{ env.AWS_S3_BUCKET }}/deploy/$GITHUB_SHA.zip --source .
    #- name: EC2에 배포
      #run: aws deploy create-deployment --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${{ env.AWS_CODE_DEPLOY_GROUP }} --s3-location bucket=${{ env.AWS_S3_BUCKET }},key=deploy/$GITHUB_SHA.zip,bundleType=zip
#
